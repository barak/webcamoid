name: Ubuntu

on: [push, pull_request]

env:
  APPIMAGEVER: 13
  QTIFWVER: 4.5.2
  NJOBS: 4

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 10
      fail-fast: false
      matrix:
       include:
         - dockerimg: amd64/ubuntu:jammy
           compiler: gcc
           upload: 1
         - dockerimg: amd64/ubuntu:jammy
           compiler: clang
           upload: 0
         - dockerimg: amd64/ubuntu:rolling
           compiler: gcc
           upload: 0
         - dockerimg: amd64/ubuntu:rolling
           compiler: clang
           upload: 0
    steps:
    - uses: actions/checkout@v2
    - name: Release build
      uses: addnab/docker-run-action@v3
      if: ${{ startsWith(github.ref, 'refs/tags/') }}
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        registry: gcr.io
        image: ${{ matrix.dockerimg }}
        options: >-
          -v ${{ github.workspace }}:/sources
          -e GITHUB_REF=${{ env.GITHUB_REF }}
          -e GITHUB_SERVER_URL=${{ env.GITHUB_SERVER_URL }}
          -e GITHUB_REPOSITORY=${{ env.GITHUB_REPOSITORY }}
          -e GITHUB_RUN_ID=${{ env.GITHUB_RUN_ID }}
          -e APPIMAGEVER=${{ env.APPIMAGEVER }}
          -e COMPILER=${{ matrix.compiler }}
          -e DOCKERIMG=${{ matrix.dockerimg }}
          -e NJOBS=${{ env.NJOBS }}
          -e QTIFWVER=${{ env.QTIFWVER }}
          -e UPLOAD=${{ matrix.upload }}
        run: |
          cd /sources
          echo
          echo Install dependencies
          echo
          chmod +x ports/ci/linux-ubuntu/install_deps.sh
          ./ports/ci/linux-ubuntu/install_deps.sh
          echo
          echo Release Build
          echo
          chmod +x ports/ci/linux-ubuntu/build.sh
          ./ports/ci/linux-ubuntu/build.sh
          echo
          echo Release Deploy
          echo
          chmod +x ports/ci/linux-ubuntu/deploy.sh
          ./ports/ci/linux-ubuntu/deploy.sh
    - name: Daily build
      uses: addnab/docker-run-action@v3
      if: ${{ !startsWith(github.ref, 'refs/tags/') }}
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        registry: gcr.io
        image: ${{ matrix.dockerimg }}
        options: >-
          -v ${{ github.workspace }}:/sources
          -e GITHUB_REF=${{ env.GITHUB_REF }}
          -e GITHUB_SERVER_URL=${{ env.GITHUB_SERVER_URL }}
          -e GITHUB_REPOSITORY=${{ env.GITHUB_REPOSITORY }}
          -e GITHUB_RUN_ID=${{ env.GITHUB_RUN_ID }}
          -e APPIMAGEVER=${{ env.APPIMAGEVER }}
          -e COMPILER=${{ matrix.compiler }}
          -e DOCKERIMG=${{ matrix.dockerimg }}
          -e NJOBS=${{ env.NJOBS }}
          -e QTIFWVER=${{ env.QTIFWVER }}
          -e UPLOAD=${{ matrix.upload }}
          -e DAILY_BUILD=1
        run: |
          cd /sources
          echo
          echo Install dependencies
          echo
          chmod +x ports/ci/linux-ubuntu/install_deps.sh
          ./ports/ci/linux-ubuntu/install_deps.sh
          echo
          echo Daily Build
          echo
          chmod +x ports/ci/linux-ubuntu/build.sh
          ./ports/ci/linux-ubuntu/build.sh
          echo
          echo Daily Deploy
          echo
          chmod +x ports/ci/linux-ubuntu/deploy.sh
          ./ports/ci/linux-ubuntu/deploy.sh
    - name: Release Upload
      uses: softprops/action-gh-release@v1
      if: ${{ startsWith(github.ref, 'refs/tags/') && matrix.upload }}
      with:
        files: webcamoid-packages/linux-jammy-gcc/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Daily Build Upload
      uses: softprops/action-gh-release@v1
      if: ${{ !startsWith(github.ref, 'refs/tags/') && matrix.upload && github.ref == 'refs/heads/master' }}
      with:
        body: "${{ github.event.head_commit.message }} (commit: ${{ github.sha }})<hr>**Note**: Ignore the commit information of the tag, the files in the release keep updating with every new build, these packages were built from ${{ github.sha }} commit."
        prerelease: true
        files: webcamoid-packages/linux-jammy-gcc/*
        name: Daily Build
        tag_name: daily-build
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
